diff --git a/libhb/encsvtav1.c b/libhb/encsvtav1.c
index 54f52a117..7b86c2c37 100644
--- a/libhb/encsvtav1.c
+++ b/libhb/encsvtav1.c
@@ -188,6 +188,14 @@ int encsvtInit(hb_work_object_t *w, hb_job_t *job)
     {
         param->tune = 2;
     }
+    else if (job->encoder_tune != NULL && !strcmp(job->encoder_tune, "filmgrain"))
+    {
+        param->tune = 3;
+    }
+    else if (job->encoder_tune != NULL && !strcmp(job->encoder_tune, "stillpicture"))
+    {
+        param->tune = 4;
+    }
     else if (job->encoder_tune != NULL && strstr("psnr", job->encoder_tune) != NULL)
     {
         param->tune = 1;

diff --git a/libhb/handbrake/av1_common.h b/libhb/handbrake/av1_common.h
index 6d53a9dac..31158f6d0 100644
--- a/libhb/handbrake/av1_common.h
+++ b/libhb/handbrake/av1_common.h
@@ -31,7 +31,7 @@ static const char * const hb_av1_svt_preset_names[] =
 
 static const char * const hb_av1_svt_tune_names[] =
 {
-    "vq", "psnr", "ssim", "fastdecode", NULL
+    "vq", "psnr", "ssim", "filmgrain", "stillpicture", "fastdecode", NULL
 };
 
 static const char * const hb_av1_svt_profile_names[] =

diff --git a/win/CS/HandBrakeWPF/Services/Encode/Factories/VideoTuneFactory.cs b/win/CS/HandBrakeWPF/Services/Encode/Factories/VideoTuneFactory.cs
index e2234643e..8a5a31f1a 100644
--- a/win/CS/HandBrakeWPF/Services/Encode/Factories/VideoTuneFactory.cs
+++ b/win/CS/HandBrakeWPF/Services/Encode/Factories/VideoTuneFactory.cs
@@ -32,6 +32,8 @@ namespace HandBrakeWPF.Services.Encode.Factories
                     return "Auto";
                 case "film":
                     return "Film";
+                case "filmgrain":
+                    return "Film Grain";
                 case "animation":
                     return "Animation";
                 case "grain":
@@ -46,6 +48,8 @@ namespace HandBrakeWPF.Services.Encode.Factories
                     return "SSIM";
                 case "screen":
                     return "Screen";
+                case "stillpicture":
+                    return "Still Picture";
                 case "fastdecode":
                     return "Fast Decode";
                 case "zerolatency":
